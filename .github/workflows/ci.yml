jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - name: Build react-pool-time
        run: yarn build
        working-directory: ./projects/react-pool-time
      - name: Build documentation
        run: yarn build
        working-directory: ./projects/documentation
  commitlint:
    if: github.ref != 'refs/heads/master'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: contains(github.ref, "release")
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v1
  format:
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - name: ESLint
        run: yarn eslint:check
      - name: Prettier
        run: yarn prettier:check
    runs-on: ubuntu-latest
  release:
    # if: github.ref == 'refs/heads/master'
    needs: ['build', 'format', 'test']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - name: Test react-pool-time
        run: yarn test:ci
        working-directory: ./projects/react-pool-time
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
name: Continuous Integration
on: [push]
